// <auto-generated />
using System;
using IplAuction.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IplAuction.Entities.Migrations
{
    [DbContext(typeof(IplAuctionDbContext))]
    [Migration("20250821065906_AddFieldInUserTeam")]
    partial class AddFieldInUserTeam
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IplAuction.Entities.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuctionStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentBid")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentPlayerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReshuffled")
                        .HasColumnType("boolean");

                    b.Property<int>("ManagerId")
                        .HasColumnType("integer");

                    b.Property<int>("MaximumPurseSize")
                        .HasColumnType("integer");

                    b.Property<int>("MaximumTeamsCanJoin")
                        .HasColumnType("integer");

                    b.Property<int>("MinimumBidIncreament")
                        .HasColumnType("integer");

                    b.Property<bool>("ModeOfAuction")
                        .HasColumnType("boolean");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.AuctionParticipants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PurseBalance")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("AuctionParticipants");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.AuctionPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentBidUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAuctioned")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSold")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("CurrentBidUserId");

                    b.HasIndex("PlayerId");

                    b.ToTable("AuctionPlayers");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.BallEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BallNumber")
                        .HasColumnType("integer");

                    b.Property<int>("BatsmanId")
                        .HasColumnType("integer");

                    b.Property<int>("BowlerId")
                        .HasColumnType("integer");

                    b.Property<int?>("DismissedPlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("ExtraRuns")
                        .HasColumnType("integer");

                    b.Property<string>("ExtraType")
                        .HasColumnType("text");

                    b.Property<int?>("FielderId")
                        .HasColumnType("integer");

                    b.Property<int>("InningNumber")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int>("NonStrikerId")
                        .HasColumnType("integer");

                    b.Property<int>("OverNumber")
                        .HasColumnType("integer");

                    b.Property<int>("RunsScored")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WicketType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BatsmanId");

                    b.HasIndex("BowlerId");

                    b.HasIndex("DismissedPlayerId");

                    b.HasIndex("FielderId");

                    b.HasIndex("MatchId");

                    b.HasIndex("NonStrikerId");

                    b.ToTable("BallEvents");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PlacedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("UserId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.InningState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BattingTeamId")
                        .HasColumnType("integer");

                    b.Property<int?>("BowlerId")
                        .HasColumnType("integer");

                    b.Property<int?>("BowlingTeamId")
                        .HasColumnType("integer");

                    b.Property<int>("InningNumber")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int?>("NonStrikerId")
                        .HasColumnType("integer");

                    b.Property<int?>("StrikerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BattingTeamId");

                    b.HasIndex("BowlerId");

                    b.HasIndex("BowlingTeamId");

                    b.HasIndex("MatchId");

                    b.HasIndex("NonStrikerId");

                    b.HasIndex("StrikerId");

                    b.ToTable("InningStates");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InningNumber")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TeamAId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamBId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.HasIndex("TeamAId");

                    b.HasIndex("TeamBId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.PlayerMatchStates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Catches")
                        .HasColumnType("integer");

                    b.Property<int>("Fours")
                        .HasColumnType("integer");

                    b.Property<int>("MaidenOvers")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("RunOuts")
                        .HasColumnType("integer");

                    b.Property<int>("Runs")
                        .HasColumnType("integer");

                    b.Property<int>("Sixes")
                        .HasColumnType("integer");

                    b.Property<int>("Stumpings")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("Wickets")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerMatchStates");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.ScoringRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ScoringRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventType = "Run",
                            Points = 1
                        },
                        new
                        {
                            Id = 2,
                            EventType = "Four",
                            Points = 1
                        },
                        new
                        {
                            Id = 3,
                            EventType = "Six",
                            Points = 2
                        },
                        new
                        {
                            Id = 7,
                            EventType = "Catch",
                            Points = 8
                        },
                        new
                        {
                            Id = 9,
                            EventType = "Stumping",
                            Points = 12
                        },
                        new
                        {
                            Id = 12,
                            EventType = "Wicket",
                            Points = 25
                        },
                        new
                        {
                            Id = 16,
                            EventType = "MaidenOver",
                            Points = 12
                        });
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotificationOn")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 21, 6, 59, 6, 174, DateTimeKind.Utc).AddTicks(9126),
                            DateOfBirth = new DateOnly(1991, 12, 12),
                            Email = "admin@tatvasoft.com",
                            FirstName = "Admin",
                            Gender = "Male",
                            IsDeleted = false,
                            IsNotificationOn = true,
                            LastName = "",
                            MobileNumber = "1234567890",
                            PasswordHash = "$2a$11$F1cTRdMQVk7gjjgQyCn.Wud72iv2tAnFWZmFmh21McbCCjSVFpW0y",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("IplAuction.Entities.Models.UserTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsReshuffled")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<bool>("ReshuffledStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.UserTeamMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTeamMatches");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Auction", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.User", "Manager")
                        .WithMany("ManagedAuction")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Season", "Season")
                        .WithMany("Auctions")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.AuctionParticipants", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Auction", "Auction")
                        .WithMany("AuctionParticipants")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("AuctionParticipants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.AuctionPlayer", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Auction", "Auction")
                        .WithMany("AuctionPlayers")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("AuctionPlayers")
                        .HasForeignKey("CurrentBidUserId");

                    b.HasOne("IplAuction.Entities.Models.Player", "Player")
                        .WithMany("AuctionPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Player");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.BallEvent", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Player", "Batsman")
                        .WithMany()
                        .HasForeignKey("BatsmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "Bowler")
                        .WithMany()
                        .HasForeignKey("BowlerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "DismissedPlayer")
                        .WithMany()
                        .HasForeignKey("DismissedPlayerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IplAuction.Entities.Models.Player", "Fielder")
                        .WithMany()
                        .HasForeignKey("FielderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IplAuction.Entities.Models.Match", "Match")
                        .WithMany("BallEvents")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "NonStriker")
                        .WithMany()
                        .HasForeignKey("NonStrikerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Batsman");

                    b.Navigation("Bowler");

                    b.Navigation("DismissedPlayer");

                    b.Navigation("Fielder");

                    b.Navigation("Match");

                    b.Navigation("NonStriker");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Bid", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "Player")
                        .WithMany("Bids")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("Bids")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Player");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.InningState", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Team", "BattingTeam")
                        .WithMany()
                        .HasForeignKey("BattingTeamId");

                    b.HasOne("IplAuction.Entities.Models.Player", "Bowler")
                        .WithMany()
                        .HasForeignKey("BowlerId");

                    b.HasOne("IplAuction.Entities.Models.Team", "BowlingTeam")
                        .WithMany()
                        .HasForeignKey("BowlingTeamId");

                    b.HasOne("IplAuction.Entities.Models.Match", "Match")
                        .WithMany("InningStates")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "NonStriker")
                        .WithMany()
                        .HasForeignKey("NonStrikerId");

                    b.HasOne("IplAuction.Entities.Models.Player", "Striker")
                        .WithMany()
                        .HasForeignKey("StrikerId");

                    b.Navigation("BattingTeam");

                    b.Navigation("Bowler");

                    b.Navigation("BowlingTeam");

                    b.Navigation("Match");

                    b.Navigation("NonStriker");

                    b.Navigation("Striker");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Match", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Season", "Season")
                        .WithMany("Matches")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Team", "TeamA")
                        .WithMany()
                        .HasForeignKey("TeamAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Team", "TeamB")
                        .WithMany()
                        .HasForeignKey("TeamBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");

                    b.Navigation("TeamA");

                    b.Navigation("TeamB");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Notification", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Player", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.PlayerMatchStates", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Match", "Match")
                        .WithMany("PlayerMatchStates")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "Player")
                        .WithMany("PlayerMatchStates")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.RefreshToken", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.UserTeam", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Auction", "Auction")
                        .WithMany("UserTeams")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "Player")
                        .WithMany("UserTeams")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Player");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.UserTeamMatch", b =>
                {
                    b.HasOne("IplAuction.Entities.Models.Auction", "Auction")
                        .WithMany("UserTeamMatches")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Match", "Match")
                        .WithMany("UserTeamMatches")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.Player", "Player")
                        .WithMany("UserTeamMatches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IplAuction.Entities.Models.User", "User")
                        .WithMany("UserTeamMatches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Auction", b =>
                {
                    b.Navigation("AuctionParticipants");

                    b.Navigation("AuctionPlayers");

                    b.Navigation("Bids");

                    b.Navigation("UserTeamMatches");

                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Match", b =>
                {
                    b.Navigation("BallEvents");

                    b.Navigation("InningStates");

                    b.Navigation("PlayerMatchStates");

                    b.Navigation("UserTeamMatches");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Player", b =>
                {
                    b.Navigation("AuctionPlayers");

                    b.Navigation("Bids");

                    b.Navigation("PlayerMatchStates");

                    b.Navigation("UserTeamMatches");

                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Season", b =>
                {
                    b.Navigation("Auctions");

                    b.Navigation("Matches");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.Team", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("IplAuction.Entities.Models.User", b =>
                {
                    b.Navigation("AuctionParticipants");

                    b.Navigation("AuctionPlayers");

                    b.Navigation("Bids");

                    b.Navigation("ManagedAuction");

                    b.Navigation("Notifications");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserTeamMatches");

                    b.Navigation("UserTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
